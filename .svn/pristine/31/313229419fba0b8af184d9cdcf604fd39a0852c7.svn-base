using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Linq;
using System.Text;

namespace Draw.src.Model
{
	[Serializable]
	public class MultiShape : Shape
	{
		#region Constructor
		public MultiShape()
		{

		}

		public MultiShape(RectangleF rect) : base(rect)
		{
		}

		#endregion

		/// <summary>
		/// Проверка за принадлежност на точка point към правоъгълника.
		/// В случая на правоъгълник този метод може да не бъде пренаписван, защото
		/// Реализацията съвпада с тази на абстрактния клас Shape, който проверява
		/// дали точката е в обхващащия правоъгълник на елемента (а той съвпада с
		/// елемента в този случай).
		/// </summary>
		public override bool Contains(PointF point)
		{
			if (base.Contains(point))
				// Проверка дали е в обекта само, ако точката е в обхващащия правоъгълник.
				// В случая на правоъгълник - директно връщаме true
				return true;
			else
				// Ако не е в обхващащия правоъгълник, то неможе да е в обекта и => false
				return false;
		}

		/// <summary>
		/// Частта което визуализира конкретния примитив.
		/// </summary>
		public override void DrawSelf(Graphics grfx)
		{
			GraphicsPath path = new GraphicsPath();
			PointF[] points = {new PointF(Rectangle.X, Rectangle.Y + Rectangle.Height ),
					new PointF( Rectangle.X + Rectangle.Width, Rectangle.Top - 75),
					new PointF(Rectangle.Right, Rectangle.Y  + Rectangle.Height)
			      
			};
			path.AddRectangle(new RectangleF(Rectangle.X -50, Rectangle.Y + 35, Rectangle.Width, Rectangle.Height));

			if (BorderWidth != 0)
			{
				grfx.DrawPath(new Pen(Color.FromArgb(Transparency, BorderColor), BorderWidth), path);
				grfx.DrawPolygon(new Pen(Color.FromArgb(Transparency, BorderColor), BorderWidth), points);
			}

			//grfx.DrawRectangle(new Pen(Color.Red), Rectangle.X , Rectangle.Y , Rectangle.Width + 70, Rectangle.Height + 70);

			grfx.FillPolygon(new SolidBrush(Color.FromArgb(Transparency, FillColor)), points);
			grfx.FillPath(new SolidBrush(Color.FromArgb(Transparency, FillColor)), path);
		}
	}
}
